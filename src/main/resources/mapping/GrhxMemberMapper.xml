<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN"
"http://ibatis.apache.org/dtd/ibatis-3-mapper.dtd">


<!-- 不使用namespace的话sql搜索定位会比较方便 -->
<mapper namespace="com.acc.dao.GrhxMemberMapper">

	<resultMap id="grhxMember" type="com.acc.model.GrhxMember">
        <result property="userid" column="USERID"/>
        <result property="pwd" column="PWD"/>
        <result property="phone" column="PHONE"/>
        <result property="tel" column="TEL"/>
        <result property="linkman" column="LINKMAN"/>
        <result property="company" column="COMPANY"/>
        <result property="createid" column="CREATEID"/>
        <result property="createtime" column="CREATETIME"/>
        <result property="authid" column="AUTHID"/>
        <result property="sex" column="SEX"/>
        <result property="operaterid" column="OPERATERID"/>
        <result property="operatetime" column="OPERATETIME"/>
        <result property="status" column="STATUS"/>
	</resultMap>
	
	<!-- 用于select查询公用抽取的列 -->
	<sql id="columns">
	    <![CDATA[
		USERID,PWD,PHONE,TEL,LINKMAN,COMPANY,CREATEID,CREATETIME,AUTHID,SEX,OPERATERID,OPERATETIME,STATUS
	    ]]>
	</sql>

	<!-- useGeneratedKeys="true" keyProperty="xxx" for sqlserver and mysql -->
	<insert id="insert" useGeneratedKeys="true" keyProperty="id">
    <![CDATA[
        INSERT INTO GRHX_MEMBER (
        	USERID,
        	PWD,
        	PHONE,
        	TEL,
        	LINKMAN,
        	COMPANY,
        	CREATEID,
        	CREATETIME,
        	AUTHID,
        	SEX,
        	STATUS
        ) VALUES (
        	#{userid},
        	#{pwd},
        	#{phone},
        	#{tel},
        	#{linkman},
        	#{company},
        	#{createid},
        	#{createtime},
        	#{authid},
        	#{sex},
        	#{status}
        )
    ]]>
	</insert>
    
	<update id="update" >
    <![CDATA[
        UPDATE GRHX_MEMBER SET
        	PWD = #{pwd} ,
        	PHONE = #{phone} ,
        	TEL = #{tel} ,
        	LINKMAN = #{linkman} ,
        	COMPANY = #{company} ,
        	AUTHID = #{authid} ,
        	SEX = #{sex} ,
        	OPERATERID = #{operaterid} ,
        	OPERATETIME = #{operatetime} ,
        	STATUS = #{status}
        WHERE 
	        USERID = #{userid} 
    ]]>
	</update>

    <delete id="delete">
    <![CDATA[
        DELETE FROM GRHX_MEMBER WHERE
        USERID = #{userid} 
    ]]>
    </delete>
    
    <select id="getById" resultMap="grhxMember">
		SELECT <include refid="columns" />
	    <![CDATA[
		    FROM GRHX_MEMBER 
	        WHERE 
		        USERID = #{userid} 
		    	AND STATUS = 0
	    ]]>
	</select>
	<select id="getByIdAll" resultMap="grhxMember">
		SELECT <include refid="columns" />
	    <![CDATA[
		    FROM GRHX_MEMBER 
	        WHERE 
		        USERID = #{userid} 
	    ]]>
	</select>
	
	<sql id="findWhere">
		<!-- ognl访问静态方法的表达式 为@class@method(args),以下为调用rapid中的Ognl.isNotEmpty()方法,还有其它方法如isNotBlank()可以使用，具体请查看Ognl类 -->
		<where>	  
			AND STATUS = 0    				
	       <if test="userid != '' and userid != null">
				and USERID = #{userid}
		   </if>
		   <if test="telPhone != '' and telPhone != null">
				and (PHONE = #{telPhone} or TEL = #{telPhone})
		   </if>
		   <if test="linkman != '' and linkman != null">
				and LINKMAN = #{linkman}
		   </if>
		   <if test="company != '' and company != null">
				and COMPANY like CONCAT('%',#{company},'%')
		   </if>
		   <if test="authid != '' and authid != null and authid != 0">
				and AUTHID = #{authid}
		   </if>
		</where>
	</sql>
		
    <select id="pageCount" resultType="long">
        SELECT count(*) FROM GRHX_MEMBER 
		<include refid="findWhere"/>    
    </select>
    
    <!--
    	分页查询已经使用Dialect进行分页,也可以不使用Dialect直接编写分页
    	因为分页查询将传 offset,pageSize,lastRows 三个参数,不同的数据库可以根于此三个参数属性应用不同的分页实现
    -->
    <select id="findPage" resultMap="grhxMember">
    	SELECT <include refid="columns" />
	    FROM GRHX_MEMBER 
		<include refid="findWhere"/>
    </select>

	<select id="getAll" resultMap="grhxMember">
    	SELECT <include refid="columns" />
	    FROM GRHX_MEMBER 
    </select>
</mapper>

